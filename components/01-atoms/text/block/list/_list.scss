  // ---- List related variables--------------------------------------------------
$bullet-size: $spacer-xs; // ~9px
$bullet-offset: $spacer-sm; // ~16px
$checklist-icon-size: 1.9875rem; // Determined by the hard science of pushing things around
$number-space: $spacer-md;


// ---- Unordered Lists --------------------------------------------------------
//
.list-unstyled {
  @extend %list-unstyled;
}

// ---- Unordered Lists --------------------------------------------------------
//
// Scope element based selector to elements, that do not carry a
// class attribute, to prevent reverting styles for all non-default lists.
//
// sass-lint:disable force-pseudo-nesting

ul:not([class]) {
  @extend %unsorted-list;

  li {
    padding-left: $bullet-offset + $bullet-size;

    &::before {
      position: absolute;
      top: ($bullet-list-line-height * $bullet-list-font-size) / 2;
      left: 0;
      margin-top: -($bullet-size / 2);
      border-radius: 50%;
      background: $bullet-list-color;
      width: $bullet-size;
      height: $bullet-size;
      content: '';
    }
  }
}


// ---- Checked Lists ----------------------------------------------------------
//
.checklist {
  @extend %unsorted-list;

  li {
    padding-left: $checklist-icon-size;

    &::before {
      @extend %icon;
      position: absolute;
      top: $spacer-xxs;
      left: 0;
      color: $bullet-list-color;
      // font-size: $checkmark-list-font-size;
      content: $icon-check;

      // sass-lint:disable no-vendor-prefixes
      -webkit-text-stroke-width: 2px;
    }
  }
}


// ---- Ordered Lists ----------------------------------------------------------
//
// Generated numbers from default ordered lists can't be styled directly
// yet. Therefore we disable auto-numbering and use a counter to increment
// a number and insert it via :before content.
//
// Scope element based selector to elements, that do not carry a
// class attribute, to prevent reverting styles for all non-default lists.
//
// sass-lint:disable force-pseudo-nesting
ol:not([class]) {
  @extend %body-font-regular;
  @include list-unstyled;
  margin-bottom: $content-spacer-base;
  line-height: $ordered-list-line-height-small;
  font-size: $ordered-list-font-size-small;
  counter-reset: number;

  li {
    position: relative;
    margin-bottom: $spacer-xs;
    padding-left: $number-space;

    &::before {
      @extend %heading-font-bold;
      position: absolute;
      left: 0;
      width: $number-space;
      line-height: $ordered-list-counter-line-height;
      font-size: $ordered-list-counter-font-size-small;
      content: counter(number);
      counter-increment: number;
    }
  }
}

// ---- Definition Lists -------------------------------------------------------
//
// TODO: Finalize when layout is available
dl:not([class]) {
  @extend %definition-list;
}


//
// Media Queries
//
@media screen and (min-width: $grid-breakpoint-md) {
  ul:not([class]) {
    line-height: $bullet-list-line-height;
    font-size: $bullet-list-font-size;

    li {
      padding-left: 0;

      &::before {
        left: -($bullet-offset + $bullet-size);
      }
    }
  }

  .checklist {
    line-height: $bullet-list-line-height;
    font-size: $bullet-list-font-size;

    li {
      padding-left: 0;

      &::before {
        left: -$checklist-icon-size;
      }
    }
  }

  ol:not([class]) {
    line-height: $ordered-list-line-height;
    font-size: $ordered-list-font-size;

    li {
      padding-left: 0;

      &::before {
        left: -$number-space;
        font-size: $ordered-list-counter-font-size;
      }
    }
  }
}
